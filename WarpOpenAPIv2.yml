openapi: 3.0.1
info:
  title: "Alor OpenAPI V2"
  description: |
    API для работы с торговой системой АЛОР Брокер. Предоставляет интерфейсы для выставления заявок и получения биржевой информации.
    
    Данные для неавторизованных запросов предоставляются с задержкой от 15 минут, для авторизованных - без задержек. 
    
    Публичная биржевая информация может быть получена через HTTP(S) API, а также доступна через однократно установленное WebSocket соединение. <br>
    **Внимание!** WebSocket соединения могут и будут разрываться *(например, если клиент не успевает обрабатывать сообщения и на стороне API в буфере накопится более 5000 событий)*. <br>
    Во внешнем ПО необходимо предусмотреть механизмы переподключения и переподписки (при необходимости)! <br> <br> 
    В OpenAPI V2 доступны "Московская Биржа" (MOEX) и "Биржа СПБ" (SPBX). 
    
    <h4> Доступные типы данных </h4>
     * Все сделки
     * Все заявки
     * Информация по инструментам
     * Котировки
     * Биржевые стаканы
     * Исторические данные
     * Позиции
     * Информация о клиенте
    
    <h4>Поддерживаемые виды заявок</h4>
     * рыночные
     * лимитные
     * стоп-лосс
     * тейк-профит
     * стоп-лосс лимит
     * тейк-профит лимит
    
    <h4>    Ограничения по частоте запросов     </h4>
    <p>На текущий момент ограничений по количеству запросов в минуту или WebSocket-подписок нет. <br/>
    Сервер может обрабатывать "тяжелые" запросы (пример - история за все время) и запросы без авторизации с меньшим приоритетом. <br/>
    АЛОР оставляет за собой право на ограничение частоты запросов, если это будет необходимо для стабильной работы системы. <br/>
    <br/></p>

    
    <h2>
    Авторизация
    </h2>

    <h4>OAuth</h4>

    <b>Внимание!</b>  
    JWT и refresh token — равносильны логину и паролю.
    Их нужно скрывать от публичного доступа.

    <h4>Для разработчиков сторонних приложений, в которых торговлю будут вести их пользователи.</h4>
    
    Мы предоставляем сервис для авторизации сторониих приложений по стандарту OAuth 2.0.
    С примером приложения, использующего OAuth сервис для авторизации пользователей можно ознакомиться в разделе
     <a href="/examples">Примеры</a>.

    Список разрешений (scopes), которые могут быть выданы приложению:
    <table>
      <tr>
        <td><b>OrdersRead</b></td>
        <td>Чтение выставленных заявок</td>
      </tr>
      <tr>
        <td><b>OrdersCreate</b></td>
        <td>Выставление заявок</td>
      </tr>
      <tr>
        <td><b>Trades</b></td>
        <td>Чтение совершенных сделок</td>
      </tr>
      <tr>
        <td><b>Personal</b></td>
        <td>Персональная информация: ФИО, почта и т.п.</td>
      </tr>
      <tr>
        <td><b>Stats</b></td>
        <td>Статистика: прибыль, средние цены и т.п.</td>
      </tr>
    </table>

    <h4>Для ведения операций от своего имени</h4>
    
    Выписать себе <b>refresh token</b> для ведения операций от своего имени [можно здесь](https://alor.dev/open-api-tokens).

    <h2>Краткое описание работы с авторизацией</h2>

    Чтобы выполнить авторизованный запрос, добавьте в запрос заголовок с именем "Authorization"
    и значением, состоящим из префикса `"Bearer "` и валидного JWT токена.

    Срок жизни JWT короткий: это сделано для безопасности. 
    Для большинства вариантов использования API мы рекоммендуем использовать механизм  <b>refresh token</b> .
    
    Механизм  <b>refresh token</b>  позволяет получать JWT с новым сроком жизни.
    Для этого отправьте POST запрос на адрес `https://oauthdev.alor.ru/refresh?token={refreshToken}` *(тестовый контур)* или `https://oauth.alor.ru/refresh?token={refreshToken}` *(боевой контур)*.
    Если у  <b>refresh token</b>  не истек срок жизни и не он не был отозван, то в теле ответа в поле AccessToken вернётся свежий JWT токен. 

    Срок жизни  <b>refresh token</b>, получаемого обычным способом — 1 месяц.  
    Срок жизни  <b>refresh token</b>, получаемого самостоятельным выписыванием — год.

    |
    |-
    
    > Если мы для вас не завели портфели для ведения торговли в игровом контуре, оставьте заявку на <a href="mailto:openapi@alor.ru">openapi@alor.ru</a> или свяжитесь с нами в [телеграме](https://t.me/AlorOpenAPI).

    </br></br>
    Тестовый контур: `https://apidev.alor.ru`

    Боевой контур: `https://api.alor.ru`
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: '1.0'
  termsOfService: "http://alorbroker.ru"
  contact:
    email: "openapi@alor.ru"
servers:
 - url: "https://apidev.alor.ru"

paths:
  /client/v1.0/users/{username}/portfolios:
     get:
       tags:
         - "Информация о клиенте"
        #- Warp.API.HTTP.Marketdata
       summary: 'Получение списка серверов портфелей'
       description: 'Получение списка серверов. В ответе в поле tradeServerCode содержится значение которое надо использовать. Не являются частью API торговой системы.'
       operationId: DevUserPortfolio
       parameters:
         - name: username
           in: path
           description: 'Имя пользователя'
           required: true
           style: simple
           explode: false
           schema:
             type: string
           example: P039004
       responses: 
         '200':
           description: 'OK' 
           content:
             application/json:
               schema:
                $ref: "#/components/schemas/servers_info"
       deprecated: false
       security: 
         - bearerAuth: []


  /md/v2/clients/{exchange}/{portfolio}/orders:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Информация о клиенте"
     summary: 'Получение информации о всех заявках'
     description: "Запрос информации о всех заявках"
     operationId: DevGetAllOrders
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
         example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []
  /md/v2/clients/{exchange}/{portfolio}/orders/{orderId}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Информация о клиенте"
     summary: 'Получение информации о выбранной заявке'
     description: "Запрос информации о выбранной заявке"
     operationId: DevGetOneOrder
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: orderId
         in: path
         description: 'Идентификатор заявки'
         required: true
         style: simple
         explode: false
         schema:
           type: integer
         example: 18995978560
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
         example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/order"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
       '404':
          description: 'Указанный orderId не найден'
     deprecated: false
     security: 
       - bearerAuth: []
 
       
  /md/v2/clients/legacy/{exchange}/{portfolio}/money:
   get: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Информация о клиенте"
     summary: "Получение информации по деньгам для выбранного портфеля"
     description: "Запрос информации о позиции по деньгам. Вызов существует для обратной совместимости с API v1, предпочтительно использовать другие вызовы (/summary, /risk, /positions)"
     operationId: "ExchangePortfolioMoney"
     parameters: 
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "D39004"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/money"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/clients/{exchange}/{portfolio}/summary:
   get: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Информация о клиенте"
     summary: "Получение информации о портфеле"
     description: "Запрос сводной информации о портфеле"
     operationId: "ExchangePortfolioSummary"
     parameters: 
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "D39004"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses: 
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/summary"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/positions:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
     summary: "Получение информации о позициях"
     description: "Запрос информации о позициях"
     operationId: "DevGetAllPositions"
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX"
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
       - name: withoutCurrency
         in: query
         description: 'Исключить из ответа все денежные инструменты, по умолчанию false'
         required: false
         schema:
           type: boolean
           enum: 
            - true
            - false
           example: false
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/positions"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/positions/{symbol}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
     summary: "Получение информации о позициях выбранного инструмента"
     description: "Запрос информации о позициях выбранного инструмента"
     operationId: "DevGetOnePosition"
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX"
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: symbol
         in: path
         description: 'Тикер (Код финансового инструмента)'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "LKOH"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/position"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
       '404':
         description: 'Указанный symbol не найден' 
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/trades:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
     summary: "Получение информации о сделках"
     description: "Запрос информации о сделках (только за текущую торговую сессию)"
     operationId: "DevGetAllTrades"
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/trades"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/{ticker}/trades:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
     summary: "Получение информации о сделках по выбранному инструменту"
     description: "Запрос информации о сделках по выбранному инструменту"
     operationId: "DevGetTickerTrades"
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: ticker
         in: path
         description: 'Тикер (Код финансового инструмента)'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "LKOH"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/trades"
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/fortsrisk:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
     summary: "Получение информации о рисках на срочном рынке"
     description: "Запрос информации о рисках на срочном рынке для выбранного портфеля"
     operationId: "Fortsrisk"
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/fortsrisk"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []
       
  /md/v2/Clients/{exchange}/{portfolio}/risk:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
     summary: "Получение информации о рисках"
     description: "Запрос информации о рисках"
     operationId: "Risk"
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/risk"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []

  /md/stats/{exchange}/{portfolio}/history/trades:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
     summary: "Получение истории сделок"
     description: "Запрос списка сделок за предыдущие дни (не более 1000 сделок за один запрос)"
     operationId: "TradeStats"
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: dateFrom
         in: query
         description: 'Начиная с какой даты отдавать историю сделок'
         required: false
         schema:
           type: string
           format: date
           example: '2021-10-13'
       - name: from
         in: query
         description: 'Начиная с какого ID (номера сделки) отдавать историю сделок'
         required: false
         schema:
           type: string
           format: integer
           example: 93713183
       - name: limit
         in: query
         description: 'Количество возвращаемых записей (максимум 1000)'
         required: false
         schema:
           type: integer
           example: 50
       - name: descending
         in: query
         description: 'Флаг обратной сортировки выдачи'
         required: false
         style: form
         explode: true
         schema:
           type: boolean
         example: false
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/trades"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []

  
  /md/stats/{exchange}/{portfolio}/history/trades/{symbol}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
     summary: "Получение истории сделок (один тикер)"
     description: "Запрос списка сделок за предыдущие дни (не более 1000 сделок за один запрос) по одному инструменту. "
     operationId: "TradeStatsBySymbol"
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: symbol
         in: path
         description: 'Фильтр по инструменту'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: SBER
       - name: dateFrom
         in: query
         description: 'Начиная с какой даты отдавать историю сделок'
         required: false
         schema:
           type: string
           format: date
           example: '2021-10-13'
       - name: from
         in: query
         description: 'Начиная с какого ID (номера сделки) отдавать историю сделок'
         required: false
         schema:
           type: string
           format: integer
           example: 93713183
       - name: limit
         in: query
         description: 'Количество возвращаемых записей (максимум 1000)'
         required: false
         schema:
           type: integer
           example: 50
       - name: descending
         in: query
         description: 'Флаг обратной сортировки выдачи'
         required: false
         style: form
         explode: true
         schema:
           type: boolean
         example: false
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/trades"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio'
     deprecated: false
     security: 
       - bearerAuth: []
  
  /md/v2/Securities:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
     summary: 'Получение информации о торговых инструментах'
     description: 'Запрос информации о торговых инструментах'
     operationId: DevSecuritiesSearch
     parameters:
       - name: 'query'
         in: query
         description: 'Тикер (Код финансового инструмента)'
         required: true
         style: form
         explode: true
         schema:
           type: string
         example: GAZP
       - name: limit
         in: query
         description: 'Ограничение на количество выдаваемых результатов поиска'
         required: false
         style: form
         explode: true
         schema:
           type: integer
           format: int32
         example: 3
       - name: offset
         in: query
         description: 'Смещение начала выборки (для пагинации)'
         required: false
         style: form
         explode: true
         schema:
           type: integer
           format: int32
         example: 10
       - name: 'sector'
         in: query
         description: 'Рынок на бирже'
         required: false
         style: form
         explode: true
         schema:
           type: string
           enum: 
            - "FORTS"
            - "FOND"
            - "CURR" 
         example: 'FOND'
       - name: 'cficode'
         in: query
         description: 'Код финансового инструмента по стандарту ISO 10962'
         required: false
         style: form
         explode: true
         schema:
           type: string
         example: 'EXXXXX'
       - name: exchange
         in: query
         description: 'Биржа'
         required: false
         style: form
         explode: true
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/securities"
     security: 
       - bearerAuth: []
     deprecated: false
     
  /md/v2/Securities/{exchange}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
     summary: 'Получение информации о торговых инструментах на выбранной бирже'
     description: 'Запрос информации об инструментах на выбранной бирже'
     operationId: DevSecuritiesSearchExchange
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/securities"
     deprecated: false
     security: 
      - bearerAuth: []
      
  /md/v2/Securities/{exchange}/{symbol}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
     summary: 'Получение информации о выбранном финансовом инструменте'
     description: 'Запрос информации о выбранном финансовом инструменте на бирже'
     operationId: DevSecuritiesSearchExchangeCode
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: "symbol"
         in: path
         description: 'Тикер (Код финансового инструмента)'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "SBER"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/security"
       '404':
         description: 'Указанный symbol не найден' 
     deprecated: false
     security: 
      - bearerAuth: []
       
  /md/v2/Securities/{symbols}/quotes:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
     summary: 'Получение информации о котировках для выбранных инструментов'
     description: 'Запрос информации о котировках для выбранных инструментов и бирж'
     operationId: DevQuotes
     parameters:
       - name: symbols
         in: path
         description: 'Принимает несколько пар биржа-тикер. Пары отделены запятыми. Биржа и тикер разделены двоеточием'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           example: "MOEX:SBER,MOEX:GAZP,SPBX:AAPL"
         example: "MOEX:SBER,MOEX:GAZP,SPBX:AAPL"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/symbols"
     deprecated: false
     security: 
       - bearerAuth: []
  
  /md/v2/orderbooks/{exchange}/{seccode}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
     summary: 'Получение информации о биржевом стакане'
     description: 'Запрос биржевого стакана'
     operationId: DevOrderbookExchangSeccode
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: seccode
         in: path
         description: 'Инструмент'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           example: "RTS-9.20"
         example: "RTS-9.20"
       - name: depth
         in: query
         description: 'Глубина стакана. Стандартное и максимальное значение - 20 (20х20).'
         required: false
         style: form
         explode: true
         schema:
           type: integer
           maximum: 20
           minimum: 1
           example: 5
         example: 5        
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
        
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orderbook"
     deprecated: false
     security: 
       - bearerAuth: []
  
  /md/v2/Securities/{exchange}/{symbol}/alltrades:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
      #- Warp.API.HTTP.Marketdata
     summary: 'Получение информации о всех сделках по ценным бумагам за сегодня'
     description: "Запросить данные о всех сделках (лента) по ценным бумагам за сегодняшний день"
     operationId: DevSecuritiesSearchAllTrades
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: "symbol"
         in: path
         description: 'Тикер (Код финансового инструмента)'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "SBER"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
         example: Simple
       - name: from
         in: query
         description: 'Начало отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds'
         required: false
         style: form
         explode: true
         schema:
           type: integer
         example: 1593430060
       - name: to
         in: query
         description: 'Конец отрезка времени (UTC) для фильтра результатов в формате Unix Time Seconds'
         required: false
         style: form
         explode: true
         schema:
           type: integer
         example: 1593430560
       - name: take
         in: query
         description: 'Количество загружаемых элементов'
         required: false
         style: form
         explode: true
         schema:
           type: integer
         example: 10
       - name: descending
         in: query
         description: 'Флаг загрузки элементов с конца списка'
         required: false
         style: form
         explode: true
         schema:
           type: boolean
         example: false
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/alltrades"
       '404':
        description: 'Указанный symbol не найден'
     deprecated: false
     security: 
      - bearerAuth: []
      
  /md/v2/Securities/{exchange}/{symbol}/actualFuturesQuote:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
     
     summary: 'Получение котировки по ближайшему фьючерсу (код)'
     description: 'Запрос котировки по ближайшему фьючерсу (только по коду, без даты)'
     operationId: DevSecuritiesFutures
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
       - name: "symbol"
         in: path
         description: 'Тикер (Код финансового инструмента)'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "SBRF"
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
         example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/symbol_futures"
       '404':
        description: 'Указанный symbol не найден'
     deprecated: false
     security: 
      - bearerAuth: []
  
  /md/v2/time:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Другое"
     summary: 'Запрос текущего UTC времени в формате Unix'
     description: 'Запрос текущего UTC времени в формате Unix Time Seconds. Если этот запрос выполнен без авторизации, то будет возвращено время, которое было 15 минут назад.' 
     operationId: LocalTime
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/time"
     deprecated: false
     security: 
       - bearerAuth: []

  /md/v2/risk/rates:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
     summary: 'Запрос ставок риска'
     description: 'Получение ставок риска для маржинальной торговли.' 
     operationId: RiskRates
     parameters:
       - name: exchange
         in: query
         description: 'Биржа'
         required: true
         style: form
         explode: false
         schema:
           type: string
           enum: 
           - "MOEX"
           - "SPBX"
       - name: ticker
         in: query
         description: 'Тикер\код инструмента, ISIN для облигаций'
         required: false
         schema:
           type: string
           example: SBER
       - name: riskCategoryId
         in: query
         description: 'Id вашей (или той которая интересует) категории риска. Можно получить из запроса информации по клиенту или через кабинет клиента'
         required: false
         schema:
           type: string
           example: 1
       - name: search
         in: query
         description: 'Часть Тикера\кода инструмента, ISIN для облигаций. Вернет все совпадения, начинающиеся с '
         required: false
         schema:
           type: string
           example: SBER
     responses:
       '200':
         description: 'OK'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/riskRates"
     deprecated: false
     security: 
       - bearerAuth: []
  
  /md/v2/history:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Ценные бумаги / инструменты"
     summary: 'Запрос истории для выбранных биржи и инструмента'
     description: 'Запрос истории рынка для выбранных биржи и финансового инструмента. Данные имеют задержку в 15 минут, если запрос не авторизован. Для авторизованных клиентов задержка не применяется.'
     operationId: DevHistory
     parameters:
       - name: symbol
         in: query
         description: 'Тикер (Код финансового инструмента)'
         required: true
         style: form
         explode: true
         schema:
           type: string
         example: SBER
       - name: exchange
         in: query
         description: 'Биржа'
         required: true
         style: form
         explode: true
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: tf
         in: query
         description: 'Длительность таймфрейма в секундах или код ("D" - дни, "W" - недели, "M" - месяцы, "Y" - годы)' 
         required: true
         style: form
         explode: true
         schema:
           type: string
           enum: 
            - 15
            - 60
            - 300
            - 3600
            - "D"
            - "W"
            - "M"
            - "Y"
         example: '60' #8fb58820-d933-46c4-98be-83343ebd728d
       - name: from
         in: query
         description: 'Начало отрезка времени (UTC) в формате Unix Time Seconds'
         required: true
         style: form
         explode: true
         schema:
           type: integer
           format: int32
         example: 1549000661
       - name: to
         in: query
         description: 'Конец отрезка времени (UTC) в формате Unix Time Seconds'
         required: true
         style: form
         explode: true
         schema:
           type: integer
           format: int32
         example: 1550060661
       - name: untraded
         in: query
         description: 'Флаг для поиска данных по устаревшим или экспирированным инструментам. При использовании требуется точное совпадение тикера'
         required: false
         schema:
           type: boolean
           enum: 
            - true
            - false
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
           example: Simple
         example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/history"
       '404':
        description: 'Указанный symbol не найден'
     deprecated: false
     security: 
       - bearerAuth: []


  /commandapi/warptrans/TRADE/v2/client/orders/actions/market:
    post: 
      tags: 
        -  "Работа с заявками"
      summary: "Создание рыночной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/market"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsMarketTV'
      parameters:
        - name: X-ALOR-REQID
          in: header
          description: 'Через точку с запятой портфель и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на предыдущий запрос с таким значением идентификатора.'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: "D39004;10338211158548488"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []
  
  /commandapi/warptrans/TRADE/v2/client/orders/actions/limit:
    post: 
      tags: 
        -  "Работа с заявками"
      summary: "Создание лимитной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/limit"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsLimitTV'
      parameters:
        - name: X-ALOR-REQID
          in: header
          description: 'Через точку с запятой портфель и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на предыдущий запрос с таким значением идентификатора.'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: "D39004;10338211158548488"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []
  
  
  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLoss:
   post: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConnector"
     summary: "Создание стоп-лосс заявки"
     description: ""
     operationId: "/v2/client/orders/actions/stopLoss"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'
              # верно, тело совпадает со stop.
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-616stn"
     responses: 
       '400':
         description: 'Bad request' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_400"
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: false
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfit:
   post: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConnector"
     summary: "Создание стоп-заявки"
     description: ""
     operationId: "/v2/client/orders/actions/takeProfit"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'
              # верно, тело совпадает со stop.
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-616stn"
     responses: 
       '400':
         description: 'Bad request' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_400"
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: false
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfitLimit:
   post: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConvertor"
     summary: "Создание стоп-лимит заявки"
     description: ""
     operationId: "/v2/client/orders/actions/takeProfitLimit"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'
              #верно, тело совпадает с stoplimit
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-616stn"
     responses: 
       '400':
         description: 'Bad request' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_400"
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: false
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLossLimit:
   post: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConvertor"
     summary: "Создание стоп-лосс лимит заявки"
     description: "Создание стоп-лосс лимит заявки"
     operationId: "/v2/client/orders/actions/stopLossLimit"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'
              #верно, тело совпадает с stoplimit
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-616stn"
     responses: 
       '400':
         description: 'Bad request' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_400"
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: false
     security: 
       - bearerAuth: []
  
  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLoss/{orderId}:
    #не совпадают виды запросов(путь) в postman и в visualstudio
    #здесь описан путь в соответствии с кодом в visualstudio
   put: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConvertor"
     summary: "Изменение стоп-лосс заявки"
     description: "Изменение стоп-лосс заявки с указанным номером"
     operationId: "/v2/client/orders/actions/stopLoss/{orderId}"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'
              # верно, тело совпадает со stop.
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: orderId
         in: path
         description: 'Идентификатор заявки'
         required: true
         style: simple
         explode: false
         schema:
           type: integer
         example: 93713183   
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-616stn"
     responses: 
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: false
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfit/{orderId}:
   put: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConvertor"
     summary: "Изменение стоп-заявки"
     description: "Изменение стоп-заявки с указанным номером"
     operationId: "/v2/client/orders/actions/takeProfit/{orderId}"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStop'
              # верно, тело совпадает со stop.
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: orderId
         in: path
         description: 'Идентификатор заявки'
         required: true
         style: simple
         explode: false
         schema:
           type: integer
         example: 93713183   
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-696sat"
     responses: 
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: false
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/takeProfitLimit/{orderId}:
   put: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConvertor"
     summary: "Изменение стоп-лимит заявки"
     description: "Изменение стоп-лимит заявки с указанным номером"
     operationId: "/v2/client/orders/actions/takeProfitLimit/{orderId}"
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'
              #верно, тело совпадает с stoplimit
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: orderId
         in: path
         description: 'Идентификатор заявки'
         required: true
         style: simple
         explode: false
         schema:
           type: integer
         example: 93713183
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-616stn"
     responses: 
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
     deprecated: false
     security: 
       - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/actions/stopLossLimit/{orderId}:
   put: 
     servers:
       - url: "https://apidev.alor.ru"
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConvertor"
     summary: "Изменение стоп-лосс лимит заявки"
     description: "Изменение стоп-лосс лимит заявки с указанным номером"
     operationId: "/v2/client/orders/actions/stopLossLimit/{orderId}"
     #в коде stopLossLimit потерялся, зато есть два takeProfitLimit
     requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStoplimit'
              #верно, тело совпадает с stoplimit
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: orderId
         in: path
         description: 'Идентификатор заявки'
         required: true
         style: simple
         explode: false
         schema:
           type: integer
         example: 93713183
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-616stn"
     responses: 
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_StopProfitLoss"
     deprecated: false
     security: 
       - bearerAuth: []

  

  /commandapi/warptrans/TRADE/v2/client/orders/actions/market/{orderId}:
    put: 
      tags: 
        -  "Работа с заявками"
      summary: "Изменение рыночной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/marketput"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsMarketTVput'
      parameters:
        - name: orderId
          in: path
          description: 'Идентификатор заявки'
          required: true
          schema:
            type: string
          example: "23733377307"
        - name: X-ALOR-REQID
          in: header
          description: 'Через точку с запятой портфолио и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка из цифр. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: "D39004;10338211158548488;2"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket"
      deprecated: false
      security: 
        - bearerAuth: []
  
  /commandapi/warptrans/TRADE/v2/client/orders/actions/limit/{orderId}:
    put: 
      tags: 
        -  "Работа с заявками"
      summary: "Изменение лимитной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/limitput"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsLimitTVput'
      parameters:
        - name: orderId
          in: path
          description: 'Идентификатор заявки'
          required: true
          schema:
            type: string
          example: "23733311729"
        - name: X-ALOR-REQID
          in: header
          description: 'Через точку с запятой портфолио и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка из цифр. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: "D39004;10338211158548488;2"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket"
      deprecated: false
      security: 
        - bearerAuth: []


  /commandapi/warptrans/TRADE/v2/client/orders/{orderId}:
    delete: 
      tags: 
        -  "Работа с заявками"
      summary: "Снятие заявки"
      description: "Снятие заявки с указанным идентификатором"
      operationId: "CommandAPI /v2/client/orders/delete"
      parameters:
        - name: orderId
          in: path
          description: 'Идентификатор заявки'
          required: true
          example: "18946369167"
          schema:
            type: integer
        - name: portfolio
          in: query
          description: 'Идентификатор клиентского портфеля'
          required: true
          schema:
            type: string
          example: "D39004"
        - name: exchange
          in: query
          description: 'Биржа'
          required: true
          schema:
            type: string
            enum:
              - "MOEX"
          example: "MOEX"
        - name: stop
          in: query
          description: 'Является стоп-заявкой?'
          required: true
          schema:
            type: string
            enum:
            - "true"
            - "false"
          example: "false"          
        - name: jsonResponse
          in: query
          description: 'Ответ в формате JSON. В виде отдельного параметра для обратной совместимости.'
          required: false
          schema:
           type: boolean
           enum: 
            - true
            - false
           example: false
        - name: format
          in: query
          description: 'Формат возвращаемого сервером JSON'
          required: false
          schema:
            type: string
            enum: 
              - Simple
          example: "Simple"
          explode: true
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_DeleteOrderId_CommandAPI"
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:          
                type: object
                properties:
                  "code":
                    type: string
                    example: "OrderToCancelNotFound (404)"
                    description: 'Тип ошибки'
                  "message":
                    type: string
                    example: "Order to cancel not found"
                    description: 'Описание ошибки'
      deprecated: false
      security: 
        - bearerAuth: []

  /warptrans/{tradeServerCode}/v2/client/orders/{orderId}:
    #не совпадают виды запросов(путь) в postman и в visualstudio
    #здесь описан путь в соответствии с кодом в visualstudio
   delete: 
     tags: 
      -  "Работа с заявками"
      #-  "Warp.ATConvertor"
     summary: "Снятие стоп-заявки"
     description: "Снятие стоп-заявки с указанным идентификатором"
     operationId: '/v2/client/orders/actions/{orderId}'
     parameters:
       - name: tradeServerCode
         in: path
         description: 'Код торгового сервера'
         required: true
         schema:
           type: string
         example: TRADE
       - name: orderId
         in: path
         description: 'Идентификатор заявки'
         required: true
         style: simple
         explode: false
         schema:
           type: integer
         example: 93713183
       - name: portfolio
         in: query
         description: 'Идентификатор клиентского портфеля'
         required: true
         schema:
           type: string
         example: D39004
       - name: stop
         in: query
         description: 'Является стоп-заявкой?'
         required: true
         schema:
           type: boolean  
         example: true
       - name: X-ALOR-REQID
         in: header
         description: 'Требуется уникальная случайная строка в качестве идентификатора запроса. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на первый запрос с таким значением идентификатора'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: "9823-616stn"
     responses: 
       '200':
         description: 'OK' 
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/orders_actions_DeleteOrderId"
       '400':
         description: 'Bad request'
         content:
           string:
             schema:
               type: string
               example: 'Attempted to change non-owned order'
               description: 'Получено некорректное значение для X-ALOR-REQID или номера заявки'
     deprecated: false
     security: 
       - bearerAuth: []
  /commandapi/warptrans/TRADE/v2/client/orders/estimate:
    post:
      tags:
        - "Работа с заявками"
      summary: Провести оценку одной заявки
      operationId: '/v2/client/orders/actions/estimate'
      requestBody:
        description: Параметры заявки
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/estimateOrderViewModel'
          application/json:
            schema:
              $ref: '#/components/schemas/estimateOrderViewModel'
          text/json:
            schema:
              $ref: '#/components/schemas/estimateOrderViewModel'
          application/*+json:
            schema:
              $ref: '#/components/schemas/estimateOrderViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/estimateOrderModel'
            application/json:
              schema:
                $ref: '#/components/schemas/estimateOrderModel'
            text/json:
              schema:
                $ref: '#/components/schemas/estimateOrderModel'
  /commandapi/warptrans/TRADE/v2/client/orders/estimate/all:
    post:
      tags:
        - "Работа с заявками"
      summary: Провести оценку нескольких заявок
      operationId: '/v2/client/orders/actions/estimate/all'
      requestBody:
        description: Список параметров заявок
        content:
          application/json-patch+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/estimateOrderViewModel'
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/estimateOrderViewModel'
          text/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/estimateOrderViewModel'
          application/*+json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/estimateOrderViewModel'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/estimateOrderModel'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/estimateOrderModel'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/estimateOrderModel'


  "/ws               ":
   trace:
     tags:
       -  "Подписки и события (WebSocket)"
     summary: 'WebSocket подписка на "биржевой стакан"'
     description: |
      **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br>
       Подписка на информацию о биржевом стакане для выбранных биржи и финансового инструмента.<br>
       Поддерживаются только авторизованные запросы.
     operationId: WS_prod_OrderBook
     requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ws_req_OrderBookGetAndSubscribe"
     responses:
       '200':
         description: 'Сообщение о результатах подписки'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/ws_res_HandledSuccessfully"
       '100':
         description: 'В качестве ответа приходят объекты как в этой схеме'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/ws_res_OrderBookGetAndSubscribe"
     deprecated: false
     security: []
     servers:
        - url: 'wss://apidev.alor.ru/ws'
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          variables: {}
  "/ws              ":
   trace:
     tags:
       -  "Подписки и события (WebSocket)"
     summary: 'WebSocket подписка на историю цен (свечи)'
     description: |
      **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на историю цен (свечи) для выбранных биржи и финансового инструмента. 
     operationId: WS_prod_BarsGet 
     requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ws_req_BarsGetAndSubscribe"
     responses:
       '200':
         description: 'Сообщение о результатах подписки'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/ws_res_HandledSuccessfully"
       '100':
         description: 'В качестве ответа приходят объекты как в этой схеме'
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/ws_res_BarsGetAndSubscribe"
     deprecated: false
     security: []
     servers:
        - url: 'wss://apidev.alor.ru/ws'
          variables: {}
        - url: 'wss://api.alor.ru/ws'
          variables: {}

  "/ws             ":
    trace:
      tags:
        -  "Подписки и события (WebSocket)"
      summary: 'WebSocket подписка на информацию о котировках'
      description: |
        **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о котировках для выбранных инструментов и бирж.
      operationId: WS_prod_QuotesSubscribe
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_req_QuotesSubscribe"
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_QuotesSubscribe"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws                    ":
    trace:
      tags:
        -  "Подписки и события (WebSocket)"
      summary: 'WebSocket подписка на все сделки'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о сделках.
      operationId: WS_prod_AllTradesGetAndSubscribe
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_req_AllTradesGetAndSubscribe"
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/alltrades"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws            ":
      trace:
        tags:
          -  "Подписки и события (WebSocket)"
        summary: 'WebSocket подписка на информацию о текущих позиция по торговым инструментам и деньгам'
        description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих позициях по ценным бумагам и деньгам. 
        operationId: WS_prod_PositionsSubscribe
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_req_PositionsGetAndSubscribe"
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_PositionsGetAndSubscribe"
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws          ":
    trace:
      tags:
        -  "Подписки и события (WebSocket)"
      summary: 'WebSocket подписка на сводную информацию по портфелю'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на сводную информацию по портфелю.
      operationId: WS_prod_SummariesGetAndSubscribeV2
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_SummariesGetAndSubscribeV2'
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_SummariesGetAndSubscribeV2"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}

  "/ws                ":
    trace:
      tags:
        -  "Подписки и события (WebSocket)"
      summary: 'WebSocket подписка на информацию по портфельным рискам'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на сводную информацию по портфельным рискам.
      operationId: WS_prod_RisksGetAndSubscribe
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_RisksGetAndSubscribe'
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_RisksGetAndSubscribe"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}

  "/ws                  ":
    trace:
      tags:
        -  "Подписки и события (WebSocket)"
      summary: 'WebSocket подписка на информацию по рискам срочного рынка (FORTS)'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию по рискам срочного рынка (FORTS).
      operationId: WS_prod_SpectraRisksGetAndSubscribe
      requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_SpectraRisksGetAndSubscribe'
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_SpectraRisksGetAndSubscribe"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}

  "/ws           ":
    trace:
      tags:
        -  "Подписки и события (WebSocket)"
      summary: 'WebSocket подписка на сделки'
      description: |
          **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о сделках.
      operationId: WS_prod_TradesSubscribe
      requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_req_TradesGetAndSubscribe"
      responses:
        '200':
          description: 'Сообщение о результатах подписки'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        '100':
          description: 'В качестве ответа приходят объекты как в этой схеме'
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ws_res_TradesGetAndSubscribe"
      deprecated: false
      security: []
      servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws         ":
    trace:
        tags:
          -  "Подписки и события (WebSocket)"
        summary: 'WebSocket подписка на информацию о стоп-заявках'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
        operationId: WS_prod_StopOrdersSubscribe
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_StopOrdersGetAndSubscribe'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_StopOrdersGetAndSubscribe"
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
 
  "/ws                 ":
    trace:
        tags:
          -  "Подписки и события (WebSocket)"
        summary: 'WebSocket подписка на информацию о заявках'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
        operationId: WS_prod_OrdersSubscribe
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_OrdersGetAndSubscribe'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_OrdersGetAndSubscribe"
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws                     ":
    trace:
        tags:
          -  "Подписки и события (WebSocket)"
        summary: 'WebSocket подписка на изменение информации о финансовых инструментах'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на изменение информации о финансовых инструментах на выбранной бирже.
        operationId: WS_prod_InstrumentsGetAndSubscribeV2
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_InstrumentsGetAndSubscribeV2'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме (только поля, которые изменились). Запросить текущие состояние по всем полям возможно через вызовы группы /securities'
            content:
              application/json:
                examples:
                  sample1:
                    value:
                      priceMax: 104.3
                      priceMin: 100
                      marginbuy: 110
                      marginsell: 80
                      tradingStatus: 17
                      tradingStatusInfo: 'нормальный период торгов'
                  sample2:
                    value:
                      priceMax: 105.3
                      priceMin: 99
                  sample3:
                    value:
                      tradingStatus: 18
                      tradingStatusInfo: 'нет торгов или торги закрыты'
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  "/ws        ":
    trace:
        tags:
          -  "Подписки и события (WebSocket)"
        summary: 'WebSocket отмена существующей подписки.'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
        operationId: WS_prod_Unsubscribe
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_Unsubscribe'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}
  /md/v2/clients/{exchange}/{portfolio}/stoporders:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
       -  "Информация о клиенте"
       - "Стоп-заявки v2 (beta)"
     summary: 'Получение информации о стоп-заявках'
     description: "Запрос информации о всех стоп-заявках"
     operationId: DevGetAllStopOrders
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
         example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/stopordersWarp"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
     deprecated: false
     security: 
       - bearerAuth: []
  /md/v2/clients/{exchange}/{portfolio}/stoporders/{orderId}:
   get:
     servers:
       - url: "https://apidev.alor.ru"
     tags:
      -  "Информация о клиенте"
      - "Стоп-заявки v2 (beta)"
     summary: 'Получение информации о выбранной стоп-заявке'
     description: "Запрос информации о выбранной стоп-заявке"
     operationId: DevGetOneStopOrder
     parameters:
       - name: exchange
         in: path
         description: 'Биржа'
         required: true
         style: simple
         explode: false
         schema:
           type: string
           enum: 
            - "MOEX"
            - "SPBX" 
       - name: portfolio
         in: path
         description: 'Идентификатор клиентского портфеля'
         required: true
         style: simple
         explode: false
         schema:
           type: string
         example: D39004
       - name: orderId
         in: path
         description: 'Идентификатор стоп-заявки'
         required: true
         style: simple
         explode: false
         schema:
           type: integer
         example: 332350
       - name: format
         in: query
         description: 'Формат возвращаемого сервером JSON'
         required: false
         schema:
           type: string
           enum: 
            - Simple
         example: Simple
     responses:
       '200':
         description: ''
         content:
           application/json:
             schema:
              $ref: "#/components/schemas/stoporderWarp"
       '403':
         description: 'Недостаточно прав для получения информации об указанном portfolio' 
       '404': 
          description: 'Указанный orderId не найден'
     deprecated: false
     security: 
       - bearerAuth: []
  /commandapi/warptrans/TRADE/v2/client/orders/actions/stopLimit:
    post: 
      tags: 
        -  "Стоп-заявки v2 (beta)"
      summary: "Создание стоп-лимитной заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/stopLimit"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStopLimitTVWarp'
      parameters:
        - name: X-ALOR-REQID
          in: header
          description: 'Через точку с запятой портфель и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на предыдущий запрос с таким значением идентификатора.'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: "D39004;10338211158548488"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []

  /commandapi/warptrans/TRADE/v2/client/orders/actions/stop:
    post: 
      tags: 
        -  "Стоп-заявки v2 (beta)"
      summary: "Создание стоп заявки"
      description: ""
      operationId: "CommandAPI /v2/client/orders/actions/stop"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStopMarketTVWarp'
      parameters:
        - name: X-ALOR-REQID
          in: header
          description: 'Через точку с запятой портфель и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на предыдущий запрос с таким значением идентификатора.'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: "D39004;10338211158548488"
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []

  /commandapi/warptrans/TRADE/v2/client/orders/actions/stopLimit/{stopOrderId}:
    put:
      tags: 
        -  "Стоп-заявки v2 (beta)" 
      summary: "Изменение стоп-лимитной заявки"
      description: "Изменение стоп-лимитной заявки"
      operationId: "CommandAPI /v2/client/orders/actions/stopLimit/{stopOrderId}"
      requestBody:
        description: "Тело заявки"
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/bodyrequest_OrdersActionsStopLimitTVWarp'
      parameters:
        - name: X-ALOR-REQID
          in: header
          description: 'Через точку с запятой портфель и уникальный идентификатор запроса ``portfolio;uid``. В качестве идентификатора запроса требуется уникальная случайная строка. Если уже приходил запрос с таким идентификатором, то заявка не будет исполнена повторно, а в качестве ответа будет возвращена копия ответа на предыдущий запрос с таким значением идентификатора.'
          required: true
          style: simple
          explode: false
          schema:
            type: string
          example: "D39004;10338211158548488"
        - name: "stopOrderId"
          in: path
          description: 'Идентификатор заявки'
          required: true
          example: "18946369167"
          schema:
            type: integer
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_LimitMarket_CommandAPI"
        '400':
          description: 'Bad request' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_400_CommandAPI"
      deprecated: false
      security: 
        - bearerAuth: []

  /commandapi/warptrans/TRADE/v2/client/orders/{orderId}/:
    delete: 
      tags: 
        -  "Стоп-заявки v2 (beta)"
      summary: "Снятие заявки"
      description: "Снятие заявки с указанным идентификатором"
      operationId: "CommandAPIWarp /v2/client/orders/delete"
      parameters:
        - name: orderId
          in: path
          description: 'Идентификатор заявки'
          required: true
          example: "18946369167"
          schema:
            type: integer
        - name: portfolio
          in: query
          description: 'Идентификатор клиентского портфеля'
          required: true
          schema:
            type: string
          example: "D39004"
        - name: exchange
          in: query
          description: 'Биржа'
          required: true
          schema:
            type: string
            enum:
              - "MOEX"
          example: "MOEX"
        - name: stop
          in: query
          description: 'Является стоп-заявкой? (тестирование: всегда true)'
          required: true
          schema:
            type: string
            enum:
            - "true"
            - "false"
          example: "true"          
        - name: jsonResponse
          in: query
          description: 'Ответ в формате JSON. В виде отдельного параметра для обратной совместимости.'
          required: false
          schema:
           type: boolean
           enum: 
            - true
            - false
           example: false
        - name: format
          in: query
          description: 'Формат возвращаемого сервером JSON'
          required: false
          schema:
            type: string
            enum: 
              - Simple
          example: "Simple"
          explode: true
      responses: 
        '200':
          description: 'OK' 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/orders_actions_DeleteOrderId_CommandAPI"
        '400':
         description: 'Bad request'
         content:
          application/json:
            schema:          
                type: object
                properties:
                  "code":
                    type: string
                    example: "OrderToCancelNotFound (404)"
                    description: 'Тип ошибки'
                  "message":
                    type: string
                    example: "Order to cancel not found"
                    description: 'Описание ошибки'
      deprecated: false
      security: 
        - bearerAuth: []

  "/ws                   ":
    trace:
        tags:
          -  "Стоп-заявки v2 (beta)"
        summary: 'WebSocket подписка на информацию о стоп-заявках'
        description: |
            **Web Socket** запрос выполняется по URL `wss://api.alor.ru/ws` (бой) или `wss://apidev.alor.ru/ws` (тест).<br> Подписка на информацию о текущих заявках на рынке для выбранных биржи и финансового инструмента.
        operationId: WS_prod_StopOrdersSubscribeV2
        requestBody:
            required: true
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_req_StopOrdersGetAndSubscribeV2'
        responses:
          '200':
            description: 'Сообщение о результатах подписки'
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/ws_res_HandledSuccessfully"
          '100':
            description: 'В качестве ответа приходят объекты как в этой схеме'
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ws_res_StopOrdersGetAndSubscribeWarp'
        deprecated: false
        security: []
        servers:
          - url: 'wss://apidev.alor.ru/ws'
            variables: {}
          - url: 'wss://api.alor.ru/ws'
            variables: {}




components:
  securitySchemes:
    bearerAuth: 
      type: http
      scheme: bearer
      bearerFormat: JWT #Токен из OAuth
  
  schemas:
    
    #put or post type responses
    orders_actions_LimitMarket_CommandAPI:
      type: object
      properties: 
        message:
          type: string
          example: "success"
          description: 'Вид ответа на успешно выполненный запрос.'
        orderNumber:
          type: string
          example: "18946416113"
          description: 'Идентификатор заявки'
    
    orders_actions_400_CommandAPI:
      type: object
      properties: 
        message:
          type: string
          example: "Request with such X-ALOR-REQID was already handled. We return the response to that request."
          description: 'Вид ответа для неуникального X-ALOR-REQID'
        oldResponse:
          type: object
          properties:
            statusCode: 
              type: integer
              example: 400
            body: 
              type: string
              example: "Provided json can't be properly deserialised, perhaps you made an error or forgot some field"
    
    orders_actions_StopProfitLoss_CommandAPI:
      type: object
      properties: 
        message:
          type: string
          example: 'Succeeded, OrderNo=326123, EndTime={08.08.18  23:59:59}'
          description: 'Вид ответа на успешно выполненный запрос.'
        orderNumber:
          type: integer
          example: 326123
          description: 'Идентификатор заявки'
          
    orders_actions_DeleteOrderId_CommandAPI:
      type: string
      example: "success"
      description: 'Вид ответа на успешно выполненный запрос.'
    
    #put or post type body descriptions
    bodyrequest_OrdersActionsLimitTVput:
      type: object
      properties: 
        side: 
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "type":
          type: string
          example: 'limit'
          description: 'Тип заявки'
        "id":
          type: integer
          example: 18936040296
          description: 'Идентификатор заявки'
        "quantity":
          type: integer
          example: 2
          description: 'Количество'
        "price":
          type: number
          example: 190.97
          description: 'Цена'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              type: string
              example: "MOEX"
              description: 'Биржа'
          #tradingSessionId: TRADE
        user:
          type: object
          properties:
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
              
    bodyrequest_OrdersActionsMarketTVput:
      type: object
      properties: 
        side: 
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "type":
          type: string
          example: 'market'
          description: 'Тип заявки'
        "id":
          type: integer
          example: 18936040296
          description: 'Идентификатор заявки'
        quantity:
          type: integer
          example: 2
          description: 'Количество'
        instrument:
          type: object
          properties:
            symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            exchange:
              type: string
              example: "MOEX"
              description: 'Биржа'
          #tradingSessionId: TRADE
        user:
          type: object
          properties:
            account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
    
    bodyrequest_OrdersActionsLimitTV: 
      type: object
      properties: 
        "side": 
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "type":
          type: string
          example: 'limit'
          description: 'Тип заявки'
        "quantity":
          type: integer
          example: 2
          description: 'Количество (лоты)'
        "price":
          type: number
          example: 190.97
          description: 'Цена'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              type: string
              example: "MOEX"
              description: 'Биржа'
          #tradingSessionId: TRADE
        user:
          type: object
          properties:
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'

    bodyrequest_OrdersActionsStopMarketTVWarp: 
      type: object
      properties: 
        "side": 
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "condition":
          type: string
          example: "More"
          description: "Условие срабатывания more/less"
        "triggerPrice":
          type: number
          example: 191.33
          description: "Цена срабатывания"
        "stopEndUnixTime":
          type: number
          example: 1590094740
          description: "Срок действия (UTC) в формате Unix Time seconds"
        "quantity":
          type: integer
          example: 2
          description: 'Количество (лоты)'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              type: string
              example: "MOEX"
              description: 'Биржа'
            "instrumentGroup": 
              type: string
              example: "TQBR"
              description: "Борд"
        "user":
          type: object
          properties:
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
            exchange:
              type: string
              example: "MOEX"
              description: 'Биржа'

    
    bodyrequest_OrdersActionsStopLimitTVWarp: 
      type: object
      properties: 
        "side": 
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "condition":
          type: string
          example: "More"
          description: "Условие срабатывания more/less"
        "triggerPrice":
          type: number
          example: 191.33
          description: "Цена срабатывания"
        "stopEndUnixTime":
          type: number
          example: 1590094740
          description: "Срок действия (UTC) в формате Unix Time seconds"
        "price":
          type: number
          example: 191.33
          description: "Цена выставления лимитной заявки"
        "quantity":
          type: integer
          example: 2
          description: 'Количество (лоты)'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              type: string
              example: "MOEX"
              description: 'Биржа'
            "instrumentGroup": 
              type: string
              example: "TQBR"
              description: "Борд"
        "user":
          type: object
          properties:
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
            exchange:
              type: string
              example: "MOEX"
              description: 'Биржа'

    bodyrequest_OrdersActionsMarketTV: 
      type: object
      properties: 
        "side": 
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "type":
          type: string
          example: 'market'
          description: 'Тип заявки'
        "quantity":
          type: integer
          example: 2
          description: 'Количество (лоты)'
        "instrument":
          type: object
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              type: string
              example: "MOEX"
              description: 'Биржа'
        "user":
          type: object
          properties:
            "portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        
    bodyrequest_OrdersActionsStopTV: 
      type: object
      properties: 
        symbol: 
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        #exchange: MOEX
        #qtyBatch: '2'
        side: 
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "type":
          type: string
          example: 'takeprofit'
          description: 'Тип заявки'
        takeProfit:
          type: number
          example: 190.98
          description: 'Стоп-цена'
        triggerPrice:
          type: number
          example: 190.98
          description: 'Стоп-цена'
        quantity:
          type: integer
          example: 2
          description: 'Количество'
        instrument:
          type: object
          properties:
            symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            exchange:
              type: string
              example: "MOEX"
              description: 'Биржа'
          #tradingSessionId: TRADE
        user:
          type: object
          properties:
            account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        endTime: 
          type: string
          example: '2020-05-21T20:59:00.000Z'
          description: 'Срок действия'
        stopEndUnixTime: 
          type: integer
          example: 1590094740
          description: 'Срок действия (UTC) в формате Unix Time seconds'
    
    bodyrequest_OrdersActionsStopLimitTV: 
      type: object
      properties: 
        symbol: 
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        side: 
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        price:
          type: number
          example: 190.97
          description: 'Цена'
        "type":
          type: string
          example: 'takeprofit'
          description: 'Тип заявки'
        takeProfit:
          type: number
          example: 190.98
          description: 'Стоп-цена'
        triggerPrice:
          type: number
          example: 190.98
          description: 'Стоп-цена'
        quantity:
          type: integer
          example: 2
          description: 'Количество'
        instrument:
          type: object
          properties:
            symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            exchange:
              type: string
              example: "MOEX"
              description: 'Биржа'
        user:
          type: object
          properties:
            account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        endTime: 
          type: string
          example: '2020-05-21T20:59:00.000Z'
          description: 'Срок действия'
        stopEndUnixTime: 
          type: integer
          example: 1590094740
          description: 'Срок действия (UTC) в формате Unix Time seconds'
    
    
    #put or post type responses
    orders_actions_LimitMarket:
      #using same schema for  
      #limit=market
      type: object
      properties: 
        message:
          type: string
          example: "(162) Заявка на покупку N 9763124 зарегистрирована (1 удовлетворено)."
          description: 'Вид ответа на успешно выполненный запрос.'
        orderNumber:
          type: integer
          example: 9763124
          description: 'Идентификатор заявки'
    orders_actions_400:
      #using same schema for  
      #limit=market
      type: object
      properties: 
        message:
          type: string
          example: "Заявка не может быть принята из-за возможного недопустимого снижения уровня маржи."
          description: 'Вид ответа для случая отвергнутой заявки.'
    
    orders_actions_StopProfitLoss:
      #same shema for
      #stop=stoplimit=stoploss=takeprofit=takeprofitlimit
      type: object
      properties: 
        message:
          type: string
          example: "Succeeded, OrderNo=326123, EndTime={08.08.18  23:59:59}, OrderEndTime=(None)"
          description: 'Вид ответа на успешно выполненный запрос.'
        orderNumber:
          type: integer
          example: 326123
          description: 'Идентификатор заявки'
    orders_actions_DeleteOrderId:
      type: string
      example: 'Succeeded'
      description: 'Вид ответа на успешно выполненный запрос.'
    
    #put or post type body descriptions
    bodyrequest_OrdersActionsLimit: 
      type: object
      properties: 
        Quantity:
          type: integer
          example: 1
          description: 'Количество'
        Side:
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        Price:
          type: number
          example: 195.11
          description: 'Цена'
        Instrument:
          type: object
          properties:
            Symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            Exchange:
              type: string
              example: "MOEX"
              description: 'Биржа'
        User:
          type: object
          properties:
            Account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            Portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        OrderEndUnixTime:
          type: integer
          example: 0
          description: 'Время (UTC) завершения сделки в формате Unix Time seconds'
    bodyrequest_OrdersActionsMarket: 
      type: object
      properties: 
        Quantity:
          type: integer
          example: 1
          description: 'Количество'
        Side:
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        Instrument:
          type: object
          properties:
            Symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            Exchange:
              type: string
              example: "MOEX"
              description: 'Биржа'
        User:
          type: object
          properties:
            Account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            Portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        OrderEndUnixTime:
          type: integer
          example: 0
          description: 'Время (UTC) завершения сделки в формате Unix Time seconds' 
    bodyrequest_OrdersActionsStop: 
      type: object
      properties: 
        Quantity:
          type: integer
          example: 1
          description: 'Количество'
        Side:
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        TriggerPrice:
          type: integer
          example: 215
          description: 'Стоп-цена'
        Instrument:
          type: object
          description: Информация об инструмента и бирже
          properties:
            Symbol:
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            Exchange:
              type: string
              example: "MOEX"
              description: 'Биржа'
        User:
          type: object
          description: Информация о пользователе
          properties:
            Account:
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            Portfolio:
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        OrderEndUnixTime:
          type: integer
          example: 0
          description: 'Время (UTC) завершения сделки в формате Unix Time Seconds'
    bodyrequest_OrdersActionsStoplimit: 
      type: object
      properties: 
        "Quantity":
          type: integer
          example: 1
          description: 'Количество'
        "Side":
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "TriggerPrice":
          type: integer
          example: 205
          description: 'Стоп-цена'
        "Price":
          type: integer
          example: 210
          description: 'Цена'
        "Instrument":
          type: object
          properties:
            "Symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "Exchange":
              type: string
              example: "MOEX"
              description: 'Биржа'
        "User":
          type: object
          properties:
            "Account":
              type: string
              example: "L01-00000F00"
              description: 'Идентификатор аккаунта пользователя'
            "Portfolio":
              type: string
              example: "D39004"
              description: 'Идентификатор клиентского портфеля'
        "OrderEndUnixTime":
          type: integer
          example: 0
          description: 'Время (UTC) завершения сделки в формате Unix Time seconds'
    
    #get 
    "symbols":
      type: array
      items:
        $ref: '#/components/schemas/symbol'
    "orders":
      type: array
      items:
        $ref: '#/components/schemas/order'
    "stoporders":
      type: array
      items:
        $ref: '#/components/schemas/stoporder'
    "stopordersWarp":
      type: array
      items:
        $ref: '#/components/schemas/stoporderWarp'
    "history":
      type: object
      properties:
        "history":
          type: array
          items: 
            $ref: '#/components/schemas/history_object'
        "next":
          type: integer
          example: 1532944860
          nullable: true
          description: 'Время (UTC) начала следующей свечи'
        "prev":
          type: integer
          example: 1532944860
          nullable: true
          description: 'Время (UTC) начала предыдущей свечи'
    "positions":
      type: array
      items:
        $ref: '#/components/schemas/position'
    "trades":
      type: array
      items:
        $ref: '#/components/schemas/trade'
    "orderbook":
      type: object
      description: 'Данные о запрашиваемом "биржевом стакане"'
      properties:
        "snapshot":
          type: boolean
          example: true
          description: 'Deprecated. Устаревшее поле, будет удалено в будущих обновлениях.'
          deprecated: true
        "bids":
          type: array
          items: 
            $ref: '#/components/schemas/orderbook_bid'
          description: 'Биды'
        "asks":
          type: array
          items: 
            $ref: '#/components/schemas/orderbook_ask'
          description: 'Аски'        
        "timestamp": 
          type: number
          example: 1610982677
          description: 'Deprecated. Устаревшее поле, будет удалено в будущих обновлениях. Вместо этого поля используйте поле "ms_timestamp".'
          deprecated: true
        "ms_timestamp": 
          type: number
          example: 1610982677578
          description: 'Время(UTC) в формате Unix Time Milliseconds'
        "existing":
          type: boolean
          example: false
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
    "orderbook_bid":
      type: object
      properties:
        "price": 
          type: number
          example: 115820
          description: 'Цена'
        "volume":
          type: integer
          example: 23
          description: 'Объём'
    "orderbook_ask":
      type: object
      properties:
        "price": 
          type: number
          example: 116030
          description: 'Цена'
        "volume":
          type: integer
          example: 31
          description: 'Объём'
    "alltrades":
      type: array
      items:
        $ref: '#/components/schemas/alltrade'
    "securities":
      type: array
      items:
        $ref: '#/components/schemas/security'
    "riskRates":
      type: object
      properties:
        "list": 
          type: array
          items: 
            $ref: '#/components/schemas/riskRate'
          description: 'Ставка риска'
        "total":
          type: integer
          example: 23
          description: 'Количество записей'

    
    "symbol":
      type: object
      properties:
        "symbol":
          type: string
          example: "KMEZ"
          description: 'Тикер (Код финансового инструмента)'
        "exchange":
          type: string
          example: "MOEX"
          description: 'Биржа'
        "description":
          type: string
          example: "КМЗ"
          description: 'Короткое описание на русском языке'
        "ask":
          type: number
          example: 171.87
          description: 'Аск'
        "bid":
          type: number
          example: 171.82
          description: 'Бид'
        "prev_close_price":
          type: number
          example: 174.9
          description: 'Цена предыдущего закрытия'
        "last_price": 
          type: number
          example: 171.82
          description: 'Последняя цена'
        "last_price_timestamp": 
          type: number
          example: 1610982677
          description: 'UTC-timestamp для значения поля "last_price"'
        "change": 
          type: number
          example: -3.08
          description: 'Разность цены и цены предыдущего закрытия'
        "change_percent": 
          type: number
          example: -1.76
          description: 'Относительное изменение цены'
        "high_price": 
          type: number
          example: 176.02
          description: 'Максимальная цена'
        "low_price": 
          type: number
          example: 170.33
          description: 'Минимальная цена'
        "accruedInt":
          type: integer
          example: 0
          description: 'Начислено'
        "accrued_interest":
          type: integer
          example: 0
          description: 'Начислено'
        "volume": 
          type: number 
          example: 38767080.0
          description: 'Объём'
        "open_interest": 
          type: number
          example: null
          nullable: true
          description: ''
        "open_price": 
          type: number
          example: 175.07
          description: 'Цена открытия'
        "yield": 
          type: integer
          example: null
          description: ""
        "lotsize": 
          type: number 
          example: 10.0
          description: 'Размер лота'
        "lotvalue": 
          type: number
          example: 1990.20
          description: ""
        "facevalue": 
          type: number
          example: 5.0
          description: ""
        "type": 
          type: string
          example: "CS"
          description: ""
    "symbol_futures":
      type: object
      properties:
        "symbol":
          type: string
          example: "SBRF-9.20"
          description: 'Тикер (Код финансового инструмента)'
        "exchange":
          type: string
          example: "MOEX"
          description: 'Биржа'
        "description":
          type: string
          example: "SRU0"
          description: 'Короткое описание на русском языке'
        "ask":
          type: number
          example: 171.87
          description: 'Аск'
        "bid":
          type: number
          example: 171.82
          description: 'Бид'
        "prev_close_price":
          type: number
          example: 174.9
          description: 'Цена предыдущего закрытия'
        "last_price": 
          type: number
          example: 171.82
          description: 'Последняя цена'
        "last_price_timestamp": 
          type: integer
          example: 91022000
          description: 'Время последней цены (UTC)'
        "change": 
          type: number
          example: -3.08
          nullable: true
          description: 'Разность цены и цены предыдущего закрытия'
        "change_percent": 
          type: number
          example: -1.76
          nullable: true
          description: 'Относительное изменение цены'
        "high_price": 
          type: number
          example: 176.02
          description: 'Максимальная цена'
        "low_price": 
          type: number
          example: 170.33
          description: 'Минимальная цена'
        "accruedInt":
          type: integer
          example: 0
          nullable: true
          description: 'Начислено'
        "accrued_interest":
          type: integer
          example: 0
          nullable: true
          description: 'Начислено'
        "volume": 
          type: number 
          example: 38767080.0
          description: 'Объём'
        "open_price": 
          type: number
          example: 175.07
          description: 'Цена открытия'
        "yield": 
          type: integer
          example: null
          description: ""
        "lotsize": 
          type: number #?
          example: 10.0
          description: 'Размер лота'
        "lotvalue": 
          type: number
          example: 1990.20
          description: ""
        "facevalue": 
          type: number
          example: 5.0
          description: ""
        "type": 
          type: string
          example: "Фьючерсный контракт SBRF-9.20"
          description: ""
    "money": 
      type: object
      properties: 
        "cash":
          type: number
          example: 25614.89
          description: 'Количество средств'
        "used":
          type: number
          example: 45536.11
          description: 'Количество использованных'
        "open":
          type: number
          example: 45536.11
          description: 'Средства на момент открытия'
        "profit":
          type: number
          example: -354.7
          description: 'Прибыль'
        "profitRate":
          type: number
          example: -354.7
          description: 'Прибыль в процентах'
        "comission":
          type: number
          example: 2.0
          description: 'Комиссия (в рублях)'
        "changes":
          type: number
          example: 525.21
          description: 'Изменения'
        "portfolio":
          type: number
          example: 525.56
          description: 'Идентификатор клиентского портфеля'
        "free":
          type: number
          example: 525.25
          description: 'Свободные средства'
    "order":
      type: object
      properties:
        id:
          type: string
          example: "18995978560"
          description: 'Уникальный идентификатор заявки'
        "symbol":
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        "brokerSymbol":
          type: string
          example: "MOEX:SBER"
          description: 'Пара биржа-Тикер'
        "exchange":
          type: string
          example: "MOEX"
          description: 'Биржа'
        "type":
          type: string
          example: "market"
          description: 'Тип заявки. Лимитная либо рыночная.'
          enum: 
            - "limit"
            - "market"
        "side":
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "status":
          type: string
          example: "filled"
          description: 'Статус исполнения. На исполнении, исполнена, отменена, отклонена.'
          enum: 
            - "working"
            - "filled"
            - "canceled"
            - "rejected"
        "transTime": 
          type: string
          example: "2020-06-16T23:59:59.9990000"
          description: 'Время выставления (UTC)'
        "endTime": 
          type: string
          example: "2020-06-16T23:59:59.9990000"
          description: 'Время завершения (UTC)'
        "qtyUnits":
          type: number
          example: 1
          description: 'Количество (штуки)'
        "qtyBatch":
          type: number
          example: 1
          description: 'Количество (лоты)'
        "qty":
          type: number
          example: 1
          description: 'Количество (лоты)'
        "filledQtyUnits":
          type: number
          example: 1
          description: 'Количество исполненных (штуки)'
        "filledQtyBatch":
          type: number
          example: 1
          description: 'Количество исполненных (лоты)'
        "filled":
          type: number
          example: 1
          description: 'Количество исполненных (лоты)'
        "price":
          type: number
          example: 208.6
          description: 'Цена'
        "existing":
          type: boolean
          example: true
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
    "stoporder":
      type: object
      properties:
        "id":
          type: number
          example: 347498
          description: 'Уникальный идентификатор стоп-заявки'
        "symbol":
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        "exchange": 
          type: string
          example: "MOEX"
          description: 'Биржа'
        "brokerSymbol": 
          type: string
          example: "MOEX:LKOH"
          description: 'Пара Биржа:Тикер'
        "type":
          type: string
          example: "stop"
          description: 'Тип заявки'
          enum:
            - "stop"
            - "stoplimit"
        "stopPrice":
          type: number
          example: 215
          description: 'Условная цена'
        "side":
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "status":
          type: string
          example: "filled"
          description: 'Статус исполнения. На исполнении, исполнена, отменена, отклонена.'
          enum: 
            - "working"
            - "filled"
            - "canceled"
            - "rejected"
        "endTime":
          type: string
          example: "2020-06-16T23:59:59.9990000"
          description: 'Время действия заявки (UTC)'
        "qty":
          type: number
          example: 1
          description: 'Количество'
        "filledQtyBatch":
          type: number
          example: 1
          description: 'Количество исполненных'
        "price":
          type: number
          example: 208.6
          description: 'Цена(Лимит)'
        "existing":
          type: boolean
          example: true
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'          
    "stoporderWarp":
      type: object
      properties:
        "id":
          type: number
          example: 347499
          description: 'Уникальный идентификатор стоп-заявки'
        "exchangeOrderId":
          type: number
          example: 425242362
          description: 'Уникальный идентификатор стоп-заявки'
        "symbol":
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        "brokerSymbol": 
          type: string
          example: "MOEX:LKOH"
          description: 'Пара Биржа:Тикер'
        "portfolio": 
          type: string
          example: "D39004"
          description: 'Пара Биржа:Тикер'
        "exchange": 
          type: string
          example: "MOEX"
          description: 'Биржа'
        "type":
          type: string
          example: "stop"
          description: 'Тип заявки (stop/stoplimit)'
          enum:
            - "stop"
            - "stoplimit"
        "side":
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "condition": 
          type: string
          example: "Less"
          description: 'Условие срабатывания more/less'
        "status":
          type: string
          example: "filled"
          description: 'Статус исполнения. На исполнении, исполнена, отменена, отклонена.'
          enum: 
            - "working"
            - "filled"
            - "canceled"
            - "rejected"
        "transTime":
          type: string
          example: "2020-05-16T23:59:59.9990000"
          description: 'Время выставления заявки (UTC)'
        "endTime":
          type: string
          example: "2020-06-16T23:59:59.9990000"
          description: 'Время действия заявки (UTC)'
        "qtyUnits":
          type: number
          example: 10
          description: 'Количество (Штуки)'
        "qtyBatch":
          type: number
          example: 1
          description: 'Количество (Лоты)'
        "qty":
          type: number
          example: 1
          description: 'Количество (Лоты)'
        "price":
          type: number
          example: 208.6
          description: 'Цена(Лимит)'
        "avg_price":
          type: number
          example: 0
          description: 'Средняя цена'
        "stopPrice":
          type: number
          example: 215
          description: 'Условная цена'
        "existing":
          type: boolean
          example: true
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
    "history_object":
      type: object
      properties:
        "time": 
          type: integer
          example: 1532944740
          description: 'Время (UTC) (Unix time seconds)'
        "close":
          type: number
          example: 210.83
          description: 'Цена при закрытии'
        "open":
          type: number
          example: 210.82
          description: 'Цена при открытии'
        "high":
          type: number
          example: 210.83
          description: 'Максимальная цена'
        "low":
          type: number
          example: 210.68
          description: 'Миниимальная цена'
        "volume":
          type: integer
          example: 1944
          description: 'Объём'
    "summary":
      type: object
      properties:
        "buyingPowerAtMorning": 
          type: number
          example: 439844.15
          description: 'Покупательская способность на утро'
        "buyingPower": 
          type: number
          example: 452404.0
          description: 'Покупательская способность'
        "profit": 
          type: number
          example: 12560.0
          description: 'Прибыль за сегодня'
        "profitRate": 
          type: number
          example: 1.93
          description: 'Норма прибыли, %'
        "portfolioEvaluation": 
          type: number
          example: 651717.0
          description: 'Ликвидный портфель'
        "portfolioLiquidationValue": 
          type: number
          example: 651717.0
          description: 'Оценка портфеля'
        "initialMargin": 
          type: number
          example: 199313.0
          description: 'Маржа'
        "riskBeforeForcePositionClosing": 
          type: number
          example: 552061.0
          description: 'Риск до закрытия'
        "commission":
          type: number
          example: 24.21
          nullable: true
          description: "Суммарная комиссия (null для Срочного рынка)"
    "position":
      type: object
      properties:
        "symbol": 
          type: string
          example: "LKOH"
          description: 'Тикер (Код финансового инструмента)'
        "brokerSymbol": 
          type: string
          example: "MOEX:LKOH"
          description: 'Пара Биржа:Тикер'
        "exchange":
          type: string
          example: "MOEX"
          description: 'Биржа'
        "avgPrice":
          type: number
          example: 16.6
          description: 'Средняя цена'
        "qtyUnits":
          type: number
          example: 20.0
          description: 'Количество (штуки)'
        "openUnits":
          type: number
          example: 30.0
          description: 'Количество открытых позиций на момент открытия (начала торгов)'
        "lotSize":
          type: number
          example: 1.0
          description: 'Размер лота'
        "shortName":
          type: string
          example: "ЛУКОЙЛ"
          description: 'Короткое наименование'
        "qtyT0":
          type: number
          example: 20.0
          description: 'Агрегированное количество T0 (штуки)' 
        "qtyT1":
          type: number
          example: 20.0
          description: 'Агрегированное количество T1 (штуки)'
        "qtyT2":
          type: number
          example: 20.0
          description: 'Агрегированное количество T2 (штуки)'
        "qtyTFuture":
          type: number
          example: 20.0
          description: 'Количество (штуки)'
        "qtyT0Batch":
          type: number
          example: 20.0
          description: 'Агрегированное количество T0 (лоты)'
        "qtyT1Batch":
          type: number
          example: 20.0
          description: 'Агрегированное количество T1 (лоты)'
        "qtyT2Batch":
          type: number
          example: 20.0
          description: 'Агрегированное количество T2 (лоты)'
        "qtyTFutureBatch":
          type: number
          example: 20.0
          description: 'Агрегированное количество TFuture (лоты)'
        "qtyBatch":
          type: number
          example: 20.0
          description: 'Агрегированное количество TFuture'
        "openQtyBatch":
          type: number
          example: 20.0
          description: 'Агрегированное количество на момент открытия (начала торгов) (лоты)'
        "qty":
          type: number
          example: 20.0
          description: 'Агрегированное количество (лоты)'
        "open":
          type: number
          example: 20.0
          description: 'Агрегированное количество на момент открытия (начала торгов) (штуки)'
        "unrealisedPl":
          type: number
          example: 3250.0
          description: ''
        "isCurrency":
          type: boolean
          example: false
          description: 'True для валютных остатков (денег), false - для торговых инструментов'
    "fortsrisk":
      type: object
      properties:
        "portfolio": 
          type: string
          example: "D49004"
          description: 'Идентификатор клиентского портфеля'
        "moneyFree": 
          type: number
          example: 452404.0
          description: 'Свободные средства. Сумма рублей и залогов, дисконтированных в рубли, доступная для открытия позиций. (MoneyFree = MoneyAmount + VmInterCl – MoneyBlocked – VmReserve – Fee)'
        "moneyBlocked": 
          type: number
          example: 12560.0
          description: 'Средства, заблокированные под ГО'
        "balanceMoney": 
          type: number
          example: 1.93
          description: 'Сальдо денежных торговых переводов за текущую сессию (поле будет удалено в будущих обновлениях)'
          deprecated: true
        "fee": 
          type: number
          example: 651717.0
          description: 'Списанный сбор'
        "moneyOld": 
          type: number
          example: 651717.0
          description: 'Общее количество рублей и дисконтированных в рубли залогов на начало сессии'
        "moneyAmount": 
          type: number
          example: 199313.0
          description: 'Общее количество рублей и дисконтированных в рубли залогов'
        "moneyPledgeAmount": 
          type: number
          example: 552061.0
          description: 'Сумма залогов, дисконтированных в рубли'
        "vmInterCl": 
          type: number
          example: 651717.0
          description: 'Вариационная маржа, списанная или полученная в пром. клиринг'
        "vmCurrentPositions": 
          type: number
          example: 199313.0
          description: 'Сагрегированная вармаржа по текущим позициям'
        "varMargin": 
          type: number
          example: 552061.0
          description: 'VmCurrentPositions + VmInterCl'
        "isLimitsSet": 
          type: boolean
          example: false
          description: 'Наличие установленных денежного и залогового лимитов'
    "risk":
      type: object
      properties:
        "portfolio": 
          type: string
          example: "D49004"
          description: 'Идентификатор клиентского портфеля'
        exchange:
          type: string
          example: "MOEX"
          description: 'Биржа'
        "portfolioEvaluation": 
          type: number
          example: 646270.9
          description: 'Общая стоимость портфеля'
        "portfolioLiquidationValue": 
          type: number
          example: 646270.9
          description: 'Стоимость ликвидного портфеля'
        "initialMargin": 
          type: number
          example: 15752.115
          description: 'Начальная маржа'
        "minimalMargin": 
          type: number
          example: 65177.0575
          description: 'Минимальная маржа'
        "correctedMargin": 
          type: number
          example: 15752.115
          description: 'Скорректированная маржа'
        "riskCoverageRatioOne": 
          type: number
          example: 630518.785
          description: 'НПР1'
        "riskCoverageRatioTwo": 
          type: number
          example: 638394.8425
          description: 'НПР2'
        "riskCategoryId": 
          type: integer # enum?
          example: 2
          description: 'Категория риска'
        "clientType": 
          type: string
          example: "HighRisk"
          description: 'Тип клиента'
        "hasForbiddenPositions": 
          type: boolean
          example: false
          description: 'Имеются ли запретные позиции'
        "hasNegativeQuantity": 
          type: boolean
          example: false
          description: 'Имеются ли отрицательные количества'
    "alltrade":
      type: object
      properties: 
        id:
          type: integer
          example: 159
          description: 'Уникальный идентификатор.'
        orderno:
          type: integer
          example: 0
          description: 'Идентификатор заявки'
        symbol:
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента). "[N/A]" используется если symbol не определен.'
        qty:
          type: integer
          example: 1
          description: 'Количество'
        price:
          type: number
          example: 142.52
          description: 'Цена'
        time:
          type: string
          example: "2018-08-07T08:40:03.445Z"
          description: 'Дата и время (UTC) закрытия заявки'
        timestamp:
          type: integer
          example: 1611158710768
          description: 'Время (UTC) в формате Unix Time Milliseconds'
        side:
          type: string
          example: "buy"
          description: Направление агрессивной заявки. Поле может быть пустым
          enum: 
            - "buy"
            - "sell"
        "oi":
          type: integer
          example: 523920
          description: 'Открытый интерес (open interest). Если не поддерживается инстурментом - значение 0.'
        existing:
          type: boolean
          example: false
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'
    "security":
      type: object
      properties:
        "symbol":
          type: string
          example: "SBER"
          description: 'Тикер (Код финансового инструмента)'
        "shortname":
          type: string
          example: "Сбербанк"
          description: 'Краткое наименование инструмента'
        "description":
          type: string
          example: "Сбербанк России ПАО ао"
          description: 'Краткое описание инструмента'
        "exchange":
          type: string
          example: "MOEX"
          description: 'Биржа'
        "type":
          type: string
          example: "CS"
          description: 'Тип'
        "lotsize":
          type: number
          example: 1.0
          description: 'Размер лота'
        "facevalue":
          type: number
          example: 100.0
          description: 'Номинальная стоимость'
        "cfiCode":
          type: string
          example: "ESXXXX"
          description: 'Тип ценной бумаги согласно стандарту ISO 10962'
        "cancellation":
          type: string
          example: "2018-09-03T00:00:00"
          description: "Дата и время (UTC) окончания действия"
        "minstep":
          type: number
          example: 0.01
          description: "Минимальный шаг цены"
        "rating":
          type: number
          example: 195613886.0
          description: ""
        "marginbuy":
          type: number
          example: 6707.86
          description: "Цена маржинальной покупки (заемные средства)"
        "marginsell":
          type: number
          example: 6707.86
          description: "Цена маржинальной продажи (заемные средства)"
        "marginrate":
          type: number
          example: 89.3428
          description: "Отношение цены маржинальной покупки к цене последней сделки"
        "pricestep":
          type: number
          example: 6.30202
          description: "Минимальный шаг цены, выраженный в рублях"
        "priceMax":
          type: number
          example: 79.57
          description: "Максимальная цена"
        "priceMin":
          type: number
          example: 70.55
          description: "Минимальная цена"
        "theorPrice":
          type: number
          example: 0.0
          description: ""
        "theorPriceLimit":
          type: number
          example: 0.0
          description: ""
        "volatility":
          type: number
          example: 0.0
          description: "Волативность"
        "currency":
          type: string
          example: "RUB"
          description: "Валюта"
        "ISIN":
          type: string
          nullable: true
          example: "RU000A1014L8"
          description: "Идентификатор ценной бумаги согласно стандарту ISO 6166"
        "yield":
          type: string
          nullable: true
          example: null
          description: ""
        "primary_board":
          type: string
          example: "ROPD"
          description: "Код режима торгов"
        "tradingStatus":
          type: integer
          example: "17"
          description: "Торговый статус инструмента"
        "tradingStatusInfo":
          type: string
          example: "нормальный период торгов"
          description: "Описание торгового статуса инструмента"
          nullable: true
        "complexProductCategory":
          type: string
          example: "2"
          description: "Требуемая категория для осуществления торговли инструментом"
          nullable: true
    "riskRate":
      type: object
      properties:
        "id": 
          type: number
          example: 22229
          description: 'Id записи'
        "instrument": 
          type: string
          example: 'SBERP'
          description: 'Инструмент'
        "exchange": 
          type: string
          example: 'MOEX'
          description: 'Биржа'
        "riskCategoryId": 
          type: number
          example: 1
          description: 'Id категории риска'
        "securityRiskCategoryId": 
          type: number
          nullable: true
          example: 1
          description: 'Id категории бумаги для категоризации. '
        "assetType": 
          type: string
          example: 'stock'
          description: 'Тип актива'
        "underlyingAsset": 
          type: string
          example: 'SBER'
          nullable: true
          description: 'Чаще всего будет null. Поле показывает к какому базовому инструменту принадлежит данный инструмент.'
        "setName": 
          type: string
          example: 'SBER'
          nullable: true
          description: 'Чаще всего будет null. Поле показывает к множеству инструменту принадлежит данный инструмент.'
        "isDirect": 
          type: boolean
          example: false
          description: 'Является ли зависимость инструмента к базовому активу прямой или обратной.'
        "isin": 
          type: string
          example: 'RU0009029557'
          description: 'ISIN инструмента. Если есть.'
        "currencyCode":
          type: string
          example: 'RUB'
          description: "Код валюты расчетов"
        "rateUp":
          type: number
          example: 20
          description: "Ставка риска повышения цены. Применяется для шортов."
        "rateDown":
          type: number
          example: 10
          description: "Ставка риска понижения цены. Применяется для лонгов."
        "rateSymmetric":
          type: number
          example: 10
          description: "Симметричная ставка риска. Приведена для справки, не используется"
        "isShortSellPossible":
          type: boolean
          example: true
          description: "Разрешен ли шорт по бумаге. True если да."
        "isMarginal":
          type: boolean
          example: true
          description: "Доступен ли данный инструмент в маржу. Т.е. есть ли он в списке маржинальных инструментов брокера."
        "setRate":
          type: number
          example: 0
          description: "Ставка риска множества"
        "createdAt":  
          type: string
          example: "2021-08-24T10:13:01.6584899"
          description: "Время добавления ставки риска"
        "updatedAt":  
          type: string
          example: "2021-10-13T16:01:42.7957367"
          description: "Время последнего обновления ставки риска"
    "time": 
      type: integer
      example: 1532944071
      description: 'Текущее время (UTC) в формате Unix time seconds'
    "trade":
      type: object
      properties: 
        "id":
          type: string
          example: 159
          description: 'Уникальный идентификатор сделки'
        "orderno":
          type: string
          example: 7271479
          description: 'Идентификатор заявки'
        "symbol":
          type: string
          example: "GAZP"
          description: 'Тикер (Код финансового инструмента). "[N/A]" используется если symbol не определен.'
        "brokerSymbol":
          type: string
          example: "GAZP:MOEX"
          description: 'Пара Биржа:Тикер'
        "exchange":
          type: string
          example: "MOEX"
          description: 'Биржа'
        "date":
          type: string
          example: "2018-08-07T08:40:03.445Z"
          description: 'Дата и время (UTC) закрытия заявки'
        "board":
          type: string
          example: "TQBR"
          description: 'Код режима торгов'
        "qtyUnits":
          type: integer
          example: 1
          description: 'Количество (штуки)'        
        "qtyBatch":
          type: integer
          example: 1
          description: 'Количество (лоты)'        
        "qty":
          type: integer
          example: 1
          description: 'Количество (лоты)'
        "price":
          type: number
          example: 142.52
          description: 'Цена'
        "side":
          type: string
          example: "buy"
          description: 'Направление сделки. Купля либо продажа.'
          enum: 
            - "buy"
            - "sell"
        "existing":
          type: boolean
          example: false
          description: 'True - для данных из "снепшота", то есть из истории. False - для новых событий'

  
    "servers_info":
      type: object
      properties:
        "Валютный Рынок":
          type: array
          items: 
            type: object
            properties:
              "portfolio": 
                type: string
                example: "G14975"
                description: "Идентификатор клиентского портфеля"
              "tks": 
                type: string
                example: "MB0014100002"
              "tradeServersInfo":
                type: array
                items:
                  type: object
                  properties:
                    "tradeServerCode":
                      type: string
                      example: "FX1"
                      description: "Код сервера"
                    "addresses":
                      type: string
                      nullable: true
                      example: ''
                    "type": 
                      type: string
                      nullable: true
                      example: ''
                    "contracts": 
                      type: string
                      example: ''
                    "market": 
                      type: string
                      nullable: true
                      example: ''
                    "accountNum": 
                      type: string
                      nullable: true
                      example: ''
        "Срочный Рынок":
          type: array
          items: 
            type: object
            properties:
              "portfolio": 
                type: string
                example: "7500GHC"
                description: "Идентификатор клиентского портфеля"
              "tks": 
                type: string
                example: "7500GHC"
              "tradeServersInfo":
                type: array
                items:
                  type: object
                  properties:
                    "tradeServerCode":
                      type: string
                      example: "FUT1"
                      description: "Код сервера"
                    "addresses":
                      type: string
                      nullable: true
                      example: ''
                    "type": 
                      type: string
                      nullable: true
                      example: ''
                    "contracts": 
                      type: string
                      example: 'фьючерсы'
                    "market": 
                      type: string
                      nullable: true
                      example: ''
                    "accountNum": 
                      type: string
                      nullable: true
                      example: ''
        "Фондовый Рынок":
          type: array
          items: 
            type: object
            properties:
              "portfolio": 
                type: string
                example: "D39004"
                description: "Идентификатор клиентского портфеля"
              "tks": 
                type: string
                example: "L01-00000F00"
              "tradeServersInfo":
                type: array
                items:
                  type: object
                  properties:
                    "tradeServerCode":
                      type: string
                      example: "TRADE"
                      description: "Код сервера"
                    "addresses":
                      type: string
                      nullable: true
                      example: null
                    "type": 
                      type: string
                      nullable: true
                      example: null
                    "contracts": 
                      type: string
                      example: 'РЦБ'
                    "market": 
                      type: string
                      nullable: true
                      example: null
                    "accountNum": 
                      type: string
                      nullable: true
                      example: null
            #$ref: '#/components/schemas/stock_market_object'
    #description_tradeServerCode:
    
        
    ws_res_OrderBookGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          $ref: '#/components/schemas/orderbook'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_BarsGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          properties:
            "time": 
              type: integer
              example: 1620220020
              description: 'Время (UTC) (Unix time seconds)'
            "close":
              type: number
              example: 210.83
              description: 'Цена при закрытии'
            "open":
              type: number
              example: 210.82
              description: 'Цена при открытии'
            "high":
              type: number
              example: 210.83
              description: 'Максимальная цена'
            "low":
              type: number
              example: 210.68
              description: 'Минимальная цена'
            "volume":
              type: integer
              example: 1944
              description: 'Объём'
          description: 'Сообщение с данными о ценах на рынке (свечи)'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_QuotesSubscribe:
       type: object
       properties:
        "data":
          type: object          
          properties:
            "symbol":
              type: string
              example: "SBER"
              description: 'Тикер (Код финансового инструмента)'
            "exchange":
              type: string
              example: "MOEX"
              description: 'Биржа'
            "description":
              type: string
              example: "Сбербанк России ПАО ао"
              description: 'Короткое описание на русском языке'
            "ask":
              type: number
              example: 303.65
              description: 'Аск'
            "bid":
              type: number
              example: 303.59
              description: 'Бид'
            "prev_close_price":
              type: number
              example: 303.7
              description: 'Цена предыдущего закрытия'
            "last_price": 
              type: number
              example: 303.59
              description: 'Последняя цена'
            "last_price_timestamp": 
              type: integer
              example: 1620221538
              description: 'Время последней цены (UTC)'
            "change": 
              type: number
              example: -0.11
              nullable: true
              description: 'Разность цены и цены предыдущего закрытия'
            "change_percent": 
              type: number
              example: -0.04
              nullable: true
              description: 'Относительное изменение цены'
            "high_price": 
              type: number
              example: 305
              description: 'Максимальная цена'
            "low_price": 
              type: number
              example: 302.71
              description: 'Минимальная цена'
            "accruedInt":
              type: integer
              example: 0
              nullable: true
              description: 'Начислено'
            "accrued_interest":
              type: integer
              example: 0
              nullable: true
              description: 'Начислено'
            "volume": 
              type: number 
              example: 38767080.0
              description: 'Объём'
            "open_price": 
              type: number
              example: 304.01
              description: 'Цена открытия'
            "yield": 
              type: integer
              example: null
              description: ""
            "lotsize": 
              type: number
              example: 10.0
              description: 'Размер лота'
            "lotvalue": 
              type: number
              example: 3035.9
              description: ""
            "facevalue": 
              type: number
              example: 3
              description: ""
            "type": 
              type: string
              example: "CS"
              description: ""
        "guid":
          description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
          type: string
          example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_PositionsGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          properties:
            "symbol": 
              type: string
              example: "AFLT"
              description: 'Тикер (Код финансового инструмента)'
            "brokerSymbol": 
              type: string
              example: "MOEX:AFLT"
              description: 'Биржа:Тикер'
            "exchange": 
              type: string
              example: "MOEX"
              description: 'Биржа'
            "avgPrice":
              type: number
              example: 82.30
              description: 'Средняя цена сделок по позициям'
            "qtyUnits":
              type: integer
              example: -10.00
              description: 'Количество (штуки)'
            "openUnits":
              type: integer
              example: -10.00
              description: 'Позиций на момент открытия (штуки)'
            "lotSize":
              type: integer
              example: 10.00
              description: 'Размер лота'
            "shortName": 
              type: string
              example: "Аэрофлот"
              description: 'Наименование инструмента'
            "qtyT0":
              type: integer
              example: 0.00
              description: 'Количество на дату "Т0" (штуки)'
            "qtyT1":
              type: integer
              example: -10.00
              description: 'Количество на дату "Т1" (штуки)'
            "qtyT2":
              type: integer
              example: -10.00
              description: 'Количество на дату "Т2" (штуки)'
            "qtyTFuture":
              type: integer
              example: -10.00
              description: 'Количество на дату "TFuture" (штуки)'
            "qtyT0Batch":
              type: integer
              example: 0.00
              description: 'Количество на дату "Т0" (лоты)'
            "qtyT1Batch":
              type: integer
              example: -1.00
              description: 'Количество на дату "Т1" (лоты)'
            "qtyT2Batch":
              type: integer
              example: -1.00
              description: 'Количество на дату "Т2" (лоты)'
            "qtyTFutureBatch":
              type: integer
              example: -1.00
              description: 'Количество на дату "TFuture" (лоты)'
            "qtyBatch":
              type: integer
              example: -1.00
              description: 'Количество (лоты)'
            "openQtyBatch":
              type: integer
              example: -1.00
              description: 'Позиции на момент открытия (начала торгов)'
            "qty":
              type: integer
              example: -1.00
              description: 'Количество (лоты)'
            "open":
              type: integer
              example: -1.00
              description: 'Позиции на момент открытия (начала торгов)'
            "dailyUnrealisedPl":
              type: number
              example: 2.80
              description: 'Нереализованная прибыль за день'
            "unrealisedPl":
              type: number
              example: 2.80
              description: 'Нереализованная прибыль'
            "isCurrency":
              type: boolean
              example: false
              description: 'True для валютных остатков (денег), false - для торговых инструментов'
          description: 'Сообщение с данными о позициях по ценным бумагам и валютным остаткам'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_TradesGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          $ref: '#/components/schemas/trade'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_SummariesGetAndSubscribeV2:
      type: object
      properties: 
        "data":
          type: object
          properties: 
            "buyingPowerAtMorning":
              type: number
              example: 5410.89
              description: 'Покупательская способность (на утро)'
            "buyingPower":
              type: number
              example: 5418.27
              description: 'Покупательская способность'
            "profit":
              type: number
              example: 93.0
              description: 'Прибыль'
            "profitRate":
              type: number
              example: 0.87
              description: 'Относительная прибыль'
            "portfolioEvaluation":
              type: number
              example: 8857.0
              description: 'Ликвидный портфель'
            "portfolioLiquidationValue":
              type: number
              example: 10714.0
              description: 'Оценка портфеля'
            "initialMargin":
              type: number
              example: 3539.0
              description: 'Начальная маржа'
            "riskBeforeForcePositionClosing":
              type: number
              example: 7088.0
              description: 'Риск до закрытия'
            "commission":
              type: number
              example: 24.21
              nullable: true
              description: "Суммарная комиссия (null для Срочного рынка)"
          description: 'Сообщение с данными о позициях по деньгам'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_RisksGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          $ref: '#/components/schemas/risk'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_SpectraRisksGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          $ref: '#/components/schemas/fortsrisk'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_StopOrdersGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          $ref: '#/components/schemas/stoporder'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_StopOrdersGetAndSubscribeWarp:
      type: object
      properties: 
        "data":
          type: object
          $ref: '#/components/schemas/stoporderWarp'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_OrdersGetAndSubscribe:
      type: object
      properties: 
        "data":
          type: object
          $ref: '#/components/schemas/order'
        "guid":
           description: 'Уникальный идентификатор сообщений подписки. Значение во входящем сообщении равно значению одноимённого поля, переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_res_HandledSuccessfully:
      type: object
      properties: 
        "message":
          type: string
          example: "Handled successfully"
          description: "Информация по созданной/отменённой подписке"
        "httpCode":
          type: integer
          example: 200
          description: "HTTP-код ответа"
        "requestGuid":
           description: 'Уникальный идентификатор подписки. Значение во входящем сообщении равно значению поля \"guid\", переданному при установке соединения.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    
    ws_req_OrderBookGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          example: "OrderBookGetAndSubscribe"
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
             - "SPBX"
           example: MOEX        
        "depth":
           description: 'Глубина стакана. Стандартное и максимальное значение - 20 (20х20).'
           type: integer
           example: 10
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
    ws_req_BarsGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          example: "BarsGetAndSubscribe"
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "tf":
           description: 'Длительность таймфрейма в секундах или код ("D" - дни, "W" - недели, "M" - месяцы, "Y" - годы)'
           type: string   
           enum: 
             - 15
             - 60
             - 300
             - 3600
             - "D"
             - "W"
             - "M"
             - "Y"
           example: 60
        "from":
           description: 'Дата и время (UTC) для первой запрашиваемой свечи'
           type: integer
           example: 1536557084
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
             - "SPBX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           example: "Simple"
        "delayed":
           description: 'Данные c задержкой в 15 минут. Для авторизованых клиентов задержка не применяется.'
           type: string
           example: false
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_QuotesSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          example: "QuotesSubscribe"
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
             - "SPBX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
    ws_req_PositionsGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "PositionsGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D39004'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
             - "SPBX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_TradesGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "TradesGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D61971'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_AllTradesGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "AllTradesGetAndSubscribe"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
             - "SPBX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "depth":
           description: 'Если указать, то перед актуальными данными придут данные о последних N сделках. Максимум 5000.'
           type: number
           example: 0
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_SummariesGetAndSubscribeV2:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "SummariesGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D61971'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_RisksGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          example: "RisksGetAndSubscribe"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D61971'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_SpectraRisksGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "SpectraRisksGetAndSubscribe"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: '7500PUQ'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_StopOrdersGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "StopOrdersGetAndSubscribe"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D39004'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_StopOrdersGetAndSubscribeV2:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "StopOrdersGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D39004'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_OrdersGetAndSubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "OrdersGetAndSubscribeV2"
        "portfolio":
           description: 'Идентификатор клиентского портфеля'
           type: string
           example: 'D61971'
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_InstrumentsGetAndSubscribeV2:
      type: object
      properties:
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "InstrumentsGetAndSubscribeV2"
        "code":
           description: 'Тикер'
           type: string
           example: SBER
        "exchange":
           description: 'Биржа'
           type: string
           enum:
             - "MOEX"
           example: MOEX
        "format":
           description: 'Формат возвращаемого сервером JSON'
           type: string
           enum: 
            - Simple
           example: "Simple"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "guid":
           description: 'Уникальный идентификатор сообщений создаваемой подписки. Все входящие сообщения, соответствующие этой подписке, будут иметь такое значение поля guid.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    ws_req_Unsubscribe:
      type: object
      properties: 
        "opcode":
          description: 'Код операции'
          type: string
          enum: 
            - "unsubscribe"
        "token":
           description: 'JWT токен для авторизации'
           type: string
           example: 'eyJhbGciOiJ...'
        "guid":
           description: 'Уникальный идентификатор подписки, от которой отписываемся.'
           type: string
           example: "f35a2373-612c-4518-54af-72025384f59b"
    estimateOrderModel:
      type: object
      properties:
        portfolio:
          type: string
          description: Портфель клиента
          nullable: true
        ticker:
          type: string
          description: Инструмент
          nullable: true
        exchange:
          type: string
          description: Биржа
          nullable: true
        quantityToSell:
          type: number
          description: Количество в лотах к продаже с плечом
          format: double
        quantityToBuy:
          type: number
          description: Количество в лотах к покупке с плечом
          format: double
        notMarginQuantityToSell:
          type: number
          description: Количество в лотах к продаже без плеча
          format: double
        notMarginQuantityToBuy:
          type: number
          description: Количество в лотах к покупке без плеча
          format: double
        orderEvaluation:
          type: number
          description: Стоимость заявки
          format: double
        commission:
          type: number
          description: Комиссия
          format: double
      additionalProperties: false
      description: Модель результата оценки стоимости и количества в лотах
    estimateOrderViewModel:
      type: object
      properties:
        portfolio:
          type: string
          description: Портфель клиента
          nullable: true
        ticker:
          type: string
          description: Инструмент
          nullable: true
        exchange:
          type: string
          description: Биржа
          nullable: true
        price:
          type: number
          description: Цена
          format: double
        lotQuantity:
          type: integer
          description: Количество лотов
          format: int64
        board:
          type: string
          description: Режим торгов (борд)
          nullable: true
      additionalProperties: false
      description: Модель заявки для оценки стоимости и количества в лотах
